{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { d as defineCustomElement$2 } from './spinner.js';\nconst infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\nconst infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\nconst InfiniteScrollContent = /*@__PURE__*/proxyCustomElement(class InfiniteScrollContent extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n    this.loadingSpinner = undefined;\n    this.loadingText = undefined;\n  }\n  componentDidLoad() {\n    if (this.loadingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n    }\n  }\n  renderLoadingText() {\n    const {\n      customHTMLEnabled,\n      loadingText\n    } = this;\n    if (customHTMLEnabled) {\n      return h(\"div\", {\n        class: \"infinite-loading-text\",\n        innerHTML: sanitizeDOMString(loadingText)\n      });\n    }\n    return h(\"div\", {\n      class: \"infinite-loading-text\"\n    }, this.loadingText);\n  }\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`infinite-scroll-content-${mode}`]: true\n      }\n    }, h(\"div\", {\n      class: \"infinite-loading\"\n    }, this.loadingSpinner && h(\"div\", {\n      class: \"infinite-loading-spinner\"\n    }, h(\"ion-spinner\", {\n      name: this.loadingSpinner\n    })), this.loadingText !== undefined && this.renderLoadingText()));\n  }\n  static get style() {\n    return {\n      ios: infiniteScrollContentIosCss,\n      md: infiniteScrollContentMdCss\n    };\n  }\n}, [32, \"ion-infinite-scroll-content\", {\n  \"loadingSpinner\": [1025, \"loading-spinner\"],\n  \"loadingText\": [1, \"loading-text\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-infinite-scroll-content\", \"ion-spinner\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-infinite-scroll-content\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, InfiniteScrollContent);\n        }\n        break;\n      case \"ion-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonInfiniteScrollContent = InfiniteScrollContent;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonInfiniteScrollContent, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","h","Host","E","ENABLE_HTML_CONTENT_DEFAULT","a","sanitizeDOMString","c","config","b","getIonMode","d","defineCustomElement$2","infiniteScrollContentIosCss","infiniteScrollContentMdCss","InfiniteScrollContent","constructor","__registerHost","customHTMLEnabled","get","loadingSpinner","undefined","loadingText","componentDidLoad","mode","renderLoadingText","class","innerHTML","render","name","style","ios","md","defineCustomElement$1","customElements","components","forEach","tagName","define","IonInfiniteScrollContent","defineCustomElement"],"sources":["/Users/trieuvy/Document/hom-nay-an-gi/node_modules/@ionic/core/components/ion-infinite-scroll-content.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config.js';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { d as defineCustomElement$2 } from './spinner.js';\n\nconst infiniteScrollContentIosCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-ios .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-lines-small-ios line,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-ios .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-ios .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst infiniteScrollContentMdCss = \"ion-infinite-scroll-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;min-height:84px;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.infinite-loading{margin-left:0;margin-right:0;margin-top:0;margin-bottom:32px;display:none;width:100%}.infinite-loading-text{-webkit-margin-start:32px;margin-inline-start:32px;-webkit-margin-end:32px;margin-inline-end:32px;margin-top:4px;margin-bottom:0}.infinite-scroll-loading ion-infinite-scroll-content>.infinite-loading{display:block}.infinite-scroll-content-md .infinite-loading-text{color:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-lines-small-md line,.infinite-scroll-content-md .infinite-loading-spinner .spinner-crescent circle{stroke:var(--ion-color-step-600, #666666)}.infinite-scroll-content-md .infinite-loading-spinner .spinner-bubbles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-circles circle,.infinite-scroll-content-md .infinite-loading-spinner .spinner-dots circle{fill:var(--ion-color-step-600, #666666)}\";\n\nconst InfiniteScrollContent = /*@__PURE__*/ proxyCustomElement(class InfiniteScrollContent extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.loadingSpinner = undefined;\n        this.loadingText = undefined;\n    }\n    componentDidLoad() {\n        if (this.loadingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.loadingSpinner = config.get('infiniteLoadingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'crescent'));\n        }\n    }\n    renderLoadingText() {\n        const { customHTMLEnabled, loadingText } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { class: \"infinite-loading-text\", innerHTML: sanitizeDOMString(loadingText) });\n        }\n        return h(\"div\", { class: \"infinite-loading-text\" }, this.loadingText);\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                // Used internally for styling\n                [`infinite-scroll-content-${mode}`]: true,\n            } }, h(\"div\", { class: \"infinite-loading\" }, this.loadingSpinner && (h(\"div\", { class: \"infinite-loading-spinner\" }, h(\"ion-spinner\", { name: this.loadingSpinner }))), this.loadingText !== undefined && this.renderLoadingText())));\n    }\n    static get style() { return {\n        ios: infiniteScrollContentIosCss,\n        md: infiniteScrollContentMdCss\n    }; }\n}, [32, \"ion-infinite-scroll-content\", {\n        \"loadingSpinner\": [1025, \"loading-spinner\"],\n        \"loadingText\": [1, \"loading-text\"]\n    }]);\nfunction defineCustomElement$1() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-infinite-scroll-content\", \"ion-spinner\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-infinite-scroll-content\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, InfiniteScrollContent);\n            }\n            break;\n        case \"ion-spinner\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$2();\n            }\n            break;\n    } });\n}\n\nconst IonInfiniteScrollContent = InfiniteScrollContent;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonInfiniteScrollContent, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}